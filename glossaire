# GLOSSAIRE

- [Général](#général)
- [Front-end](#front-end)
- [UX / UI](#ux-ui)
- [Architecture](#architecture)
- [Modélisation / Base de données](#modélisation---base-de-données)
- [Symfony](#symfony)
- [Sécurité](#sécurité)
- [RGPD](#rgpd)
- [SEO](#seo)
- [Gestion de projets / DevOps](#gestion-de-projets---devops)
- [English](#english)

## Général
1.	Quel est l’environnement à installer pour exécuter un script PHP ? Citer 2 exemples de logiciels permettant ce contexte -> Après avoir installer Laragon on le met en route. Notre fichier devra être enregistré dans le dossier "htdocs/www" et l'URL devra contenir tout le chemin nécessaire pour arrive au dossier. 
                                                                        ->MAMP ou Laragon
2.	Qu’est-ce qu’un algorithme ? = Série d'instructions qui permettent d'obtenir un résultat ou résoudre un problème.
3.	Qu’est-ce qu’une variable ? Par quel symbole est préfixée une variable en PHP ? = C'est un conteneur qui nous permet de stocker des informations temporairement. Elles sont préfixées par le symbole "$".
4.	Qu’est-ce que la portée d’une variable ? = La portée d'une variable délimite la zone où la variable est utilisable.
5.	Qu’est-ce qu’une constante ? Quelle est la différence avec une variable ? = Une constante ne pourra pas voir sa valeur changer plus tard, elle reste la même tout le temps contrairement à une variable.
6.	Qu’est-ce qu’une superglobale, combien en existent-ils et donner un exemple d’utilisation -> Une superglobale est une variable qui est déjà prédefinie et est disponible dans n'importe quel endroit du script PHP.
        Il en existe 9.
        La superglobale "__GET" par exemple nous permet de récuperer des données présente dans l'URL.
7.	Quels sont les différents types (primitifs) que l’on peut associer à une variable en PHP ? Les citer et en donner des exemples (ne pas oublier le type d’une variable sans valeur) = Les types de variables primitifs sont : string(représente une chaîne de caractère), boolean(représente deux valeurs: true ou false), float(représente un nombre à virgule), int(représente un nombre entier) et null(représente une variable ans valeur). 
8.	Existe-t-il plusieurs types de tableaux en PHP, si oui lesquels ? ->Oui : les tableaux associatifs, les tableaux indexés.
9.	Quelles sont les différentes structures de contrôles qu’il existe en algorithmie ? Donner un exemple pour chacune d’entre elles
10.	Quelle est la fonction PHP permettant de demander la longueur d’une chaîne de caractères ? = "strlen"
11.	Qu’est-ce qu’une session ? Quelle fonction permet de démarrer une session en PHP ? Donner un exemple d’utilisation en PHP -> Une session permet de stocker les données d'un utilisateur grâce à des cookies et à  un identifiant unique pour chaque utilisateur. 
        La fonction session_start() permet de demarrer une fonction.
12.	Qu’est-ce qu’un cookie ? Donner un exemple d’utilisation en PHP -> Un cookie est un fichier texte qui va venir se stocker sur l'ordinateur de l'utilisateur qui visite le site en question et qui va permettre d'enregistrer et lire les infos de l'utilisateur afin de le reconnaitre.
13.	Quelle est la différence entre les instructions « require » et « include » en PHP = require arretera le script et affichera une erreur fatale si il ne trouve pas le fichier tandis que include affichera un avertissement mais n'arretera pas le script même si il y a une erreur.
14.	Comment effectuer une redirection en PHP ? -> On utilise la fonction header() en indiquant la page où l'on veut que l'utilisateur soit redirigé.
15.	Définir la partie « front-end » et « back-end » d’une application = front-end-> désigne l'interface graphique que l'on peut voir et permet l'interaction entre l'utilisateur et le programme.
                                                                        back-end -> recouvrent les processus que l'on ne peut pas voir mais qui permettent à l'application de fonctionner.
16.	Définir le contrôle de version ? Qu’est-ce que Git ? Le contrôle de version permet de visionner toutes les versions des fichiers qui constituent un projet et toutes les modifications apportées à ces fichiers. Git est un outil qui permet de voir les differentes modifications des fichiers d'un projet.
17.	Qu’est-ce qu’un CMS ? Citer au moins 2 exemples -> Un CMS est un logiciel qui permet de créer un site web et de gérer son contenu et sa structure. Wordpress et Shopify

## Front-end
18.	Définir HTML = Langage de balisage utilisé pour structurer une page web et son contenu.
19.	Définir CSS = Langage utilisé pour la mise en forme d'une page web. 
20.	Définir Javascript = Langage de programmation qui permet de créer des pages web interactives.
21.	Définir JSON. Dans quel contexte ce format est-il utilisé ? 
22.	Peut-on interpréter du Javascript côté serveur ? Si oui, comment ?
23.	Qu’est-ce qu’un sélecteur CSS ? = C'est un élément qui permet de cibler les élements HTML auxquels on veut appliquer une règle CSS.
24.	Quelle balise HTML permet de créer un lien hypertexte ? = la balise anchorage "a" suivi de "href".
25.	Qu’est-ce qu’une requête AJAX ?
26.	Quel sélecteur CSS permet de sélectionner tous les éléments d’une classe spécifique ? D’un identifiant spécifique ? on utilise "." pour appliquer du style sur une classe et "#" pour un identifiant.
27.	Définir le responsive design = technique de conception web qui permet d'adapter la page d'un site web en fonction de l'écran ou il est consulté.
28.	Qu’est-ce que le templating ? -> 
29.	Qu’est-ce qu’une fonction anonyme en Javascript ?
30.	Quelle méthode JavaScript est utilisée pour ajouter un élément à la fin d'un tableau ? -> La méthode "push()"
31.	Qu’est-ce qu’un « media query » ? = fonctionnalité qu'on inscrit dans le css qui permet d'adapter la mise en forme d'un site web en fonction de la taille d'ecran où il apparait. 
32.	Qu’est-ce qu’un pseudo élément en CSS ? = mot clés qui permet de cibler uniquement une partie d'un élément HTML.
33.	Qu’est-ce que Bootstrap ? Donner d’autres exemples équivalent -> C'est un framework qui fournit des outils HTML/CSS/JavaScript qui permettent de créer des sites web. AngularJS, NodeJS
34.	Quand un formulaire HTML est créé, quelles sont les 2 méthodes qui peuvent lui être associées ? Donner la différence entre ces 2 méthodes = Un formulaire HTML peut être associés à la méthode "get" ou la méthode "post". 
    Get -> Les données sont inscrites directement dans l'URL du site.
    Post -> Les paramètres sont inscrits dans la requête HTTP.

## UX UI
35.	Quelle est la différence entre UX Design et UI Design ? UX design = Experience utilisateur et UI = Interface utilisateur
36.	Qu’est-ce qu’un wireframe ? -> C'est le plan/le squelette du site que l'on souhaite coder.
37.	Qu’est-ce qu’un prototype ? -> 
38.	Qu’est-ce que la hiérarchie visuelle en UI Design ? -> C'est mettre en avant les éléments les plsu importants sur un site web en utilisant des couleurs/contrastes, différentes tailles etc .
39.	Qu’est-ce que l’accessibilité en UX Design ? -> L'accessibilité permet à toutes les personnes, dont les utilisateurs en situation d'handicaps, d'accéder au site et de naviguer sans rencontrer d'obstacle dû à une mauavsie utilisation du css.
40.	Qu’est-ce qu’une grille de mise en page ? -> 
41.	Qu’est-ce que la notion d’affordance en UX Design ? = Rendre l'experience utilisateur plus simple en rendant le site ergonomique et accessible. 
42.	Qu’est-ce qu’un « mobile first design » ? = C'est un site qui a été conçu en priorité pour les mobiles et ensuite pour les plus grands écrans.

 
## Programmation orientée objet (POO)
43.	Donner une définition de la programmation orientée objet = Modèle de programmation avec un concept de classes et d'objets qui permettent d'instancier des objets et réutiliser des classes afin de structurer un programme logiciel.
44.	Qu’est-ce qu’une classe ? Comment la déclare-t-on ? = Ensemble de codes qui contiennent des variables et des fonctions permettant de créer des objets. On la déclare en lui donnant le même nom que notre fichier, elle est précedé d'un point et commence par une majuscule. 
45.	Qu’est-ce qu’un objet ? = Conteneurs composés de variables et de fonctions.
46.	Définir la notion de propriété / attribut / méthode = Propriété/Attribut = caractéristiques d'une classe ou d'un objet. Méthode = fonction définie dans une classe qui agit sur les objets de cette même classe
47.	Qu’est-ce que la visibilité d’une propriété ou d’une méthode ? Citer les différents types de visibilité = "Protected", "Private, "Public". Ils définissent si l'objet ou la méthode peut être accessible partout ou non. 
48.	Quelle est la méthode spécifique utilisée pour créer un nouvel objet à partir d’une classe ? = __construct
49.	Qu’est-ce que l’encapsulation ? = Principe fondamental de la POO qui consiste à masquer certains attributs de la classe de sorte à ce qu'ils ne peuvent pas être vu ou modifier par un tiers.
50.	Que signifie « étendre une classe » ? Quelle est le concept clé mis en œuvre ? Donner un exemple
51.	Définir l’opérateur de résolution de portée
52.	Définir une méthode / propriété statique = une méthode statique est dite statique lorsqu'elle appartient à une classe directement et non pas a un objet.
53.	Définir le polymorphisme en POO
54.	Définir une méthode / classe abstraite ?
55.	Définir le chaînage de méthodes ->
56.	Qu’est-ce que la méthode __toString() ? Existe-t-il d’autres méthodes « magiques » = Méthode qui permet de renvoyer l'objet demandé sous forme d'une chaine de caractère. 
    __construct() = Permet d'initaliser des propriétés dès qu'un objet sera crée. Elle sera ensuite appelée automatiquement dès qu'une classe sera instancié.
    __get()= Permet de lire la propriété inexistante (privée ou protégée) d'une classe.
    __set()= Permet de définir la propriété inexistante (privée ou protégée) d'une classe.

57.	Qu’est-ce qu’un « autoload » ? = méthode qui permet de charger automatiquement les fichiers de classes dont on a besoin.
58.	Comment appelle-t-on en français les « getters » et les « setters » ? = getters -> accesseurs, setters -> mutateurs
59.	Qu’est-ce que la sérialisation en PHP ? 

## Architecture 
60.	Qu’est-ce que l’architecture client / serveur ? Grâce à quel type de requête peut-on interroger le serveur. Définir l’acronyme de ce type de requête. Si on ajoute un « S » à cet acronyme, expliquer la différence
61.	Donner la définition d’un design pattern. Citer au moins 3 exemples de design pattern
62.	Qu’est-ce que l’architecture MVC ? -> C'est une architecture qui repose sur le modèle "Model/View/Controller"
63.	Quel est le rôle de chaque couche du design pattern MVC : Model, View, Controller ? -> Model = récupère les informations depuis la base de données. 
                                                                                        -> View = ce que l'utilisateur voit. C'est là qu'on gère l'interface du site.
                                                                                        -> Controller = récupère les infos que l'utilisateur envoie depuis la vue, les transmet au model afin d'ajouter/modifier des données et renvoie le résultat à la vue.
64.	Quels sont les avantages de l’architecture MVC ?
65.	Existe-t-il des variantes à l’architecture MVC ?
66.	Qu’est-ce qu’une API ? Définir l’architecture REST

## Modélisation - Base de données
67.	Qu’est-ce que la modélisation de données ? Définir la méthode Merise -> La modélisation de données c'est l'analyse d'une structure de données. La méthode merise permet de conceptualiser cette structure afin de visualiser les liens et les associations entre ces données.
68.	Quelles sont les 3 étapes principales de la méthode Merise ? 
a.	Analyse, conception et réalisation -> V
b.	Planification, exécution et contrôle
c.	Création, modification et suppression
69.	Qu’est-ce qu’un modèle conceptuel de données (MCD) en Merise ? -> Modèle Conceptuel de Données = C'est une couche de la méthode merise qui permet de schématiser la structure d'une base de données. C'est la moins précise des couches car les types d'attributs de classe n'y apparaissent pas.
70.	Qu’est-ce qu’un modèle logique de données (MLD) en Merise ? -> Modèle Logique des Données = c'est une couche de la méthode Merise qui permet de 
71.	Donner la définition des mots suivants :
a.	Entité -> C'est l'ensemble d'informations qui caractérise un objet.
b.	Relation -> C'est un lien entre deux entités
c.	Cardinalité -> Ce sont des valeurs qui permettent de mieux préciser les relations entre deux entités.
d.	Clé primaire / clé étrangère -> Clé primaire = Element qui permet de garantir qu'un enregistrement est unique.
    Clé étrangère = Element qui prend la valeur de la clé primaire afin de crée des liens entres les différentes entités.
72.	Que devient une relation de type « Many To Many » dans le modèle logique de données ? -> Elle devient une table associative
73.	Qu’est-ce qu’une base de données ? -> C'est un stockage de données qui permet de les gérer , les modifier et les consulter facilement 
74.	Définir les notions suivantes : 
a.	SQL -> Language informatique qui permet de gérer des bases de données
b.	MySQL -> 
c.	SGBD (donner 2 exemples de SGBD)
75.	Dans une base de données, les données sont stockées dans des tables. Celles-ci sont constituées de lignes appelées enregistrement et de colonnes appelées attributs
76.	Quelle est la différence entre une base de données relationnelle et non relationnelle ? -> Une base de données relationnelles comporte des entités reliés entre elles par des liens.
                                                                                            -> Une base de données non relationnelle comporte des entités qui ne sont pas reliés entre elles.
77.	Qu’est-ce qu’une jointure dans une base de données ? En existe-t-il plusieurs ? Si oui lesquelles ? -> Une jointure permet de faire le lien entre deux tables qui ont un champ en commun. Il existe plusieurs jointures: "INNER JOIN", "LEFT JOIN", "RIGHT JOIN", "FULL JOIN".
78.	A quoi sert une vue dans une base de données ?
79.	Qu’est-ce que l’intégrité référentielle dans une base de données ?
80.	Quelles sont les fonctions d’agrégation en SQL ?
81.	Qu’est-ce qu’un CRUD dans le contexte d’une base de données ?
82.	Quelles sont les clauses qui permettent de :
a.	Insérer un nouvel enregistrement dans une table -> INSERT INTO
b.	Modifier un enregistrement dans une table -> UPDATE
c.	Supprimer un enregistrement dans une table -> DELETE
d.	Supprimer la base de données -> DROP
e.	Filtrer les résultats d’une requête SQL -> WHERE 
f.	Trier les résultats d’une requête SELECT -> ORDER BY
g.	Regrouper les résultats d'une requête SELECT en fonction d'une colonne spécifique -> GROUP BY 
h.	Concaténer 2 chaînes de caractères -> CONCAT()
83.	Comment se connecter à une base de données en PHP ? Quelle est la classe native utilisée ?

## Symfony
84.	Qu’est-ce que Symfony ? -> Symfony est un framework PHP opensource.
85.	Sur quel langage de programmation et design pattern repose Symfony ? -> Symfony repose sur le language PHP et un design pattern de type MVC (model/view/controller)
86.	Quelle est la dernière version en date de Symfony ? -> La dernière version en date de symfony est symfony 7.2
87.	Qu’est-ce qu’un bundle ? -> C'est une sorte d'extension qui permet d'ajouter des fonctionnalités au framework.
88.	Quel est le moteur de template utilisé par défaut dans Symfony ? Twig est le moteur de templates utilisé par symfony
89.	Qu’est-ce qu’un ORM ? Quel est son utilité et comment s’appelle-t-il au sein de Symfony ? -> Un ORM permet de questionné notre base de données à l'aide d'objets et de collections d'objets sans avoir à utilisé de requête SQL. L'ORM utilisé au sein de symfony est Doctrine.
90.	Qu’est-ce que l’injection de dépendances ? Quel est l’outil utilisé dans ce contexte et quel fichier contient l’intégralité des dépendances du projet ?
91.	Que permet le bundle Maker au sein de Symfony ? -> Ce bundle nous permet de créer des méthodes, des formulaires, des controllers, des entités et des migrations.
92.	Quel est le langage de requêtage exploité au sein d’un projet Symfony ?
93.	Quel est le composant qui garantit l’authentification et l’autorisation des utilisateurs ?

## Sécurité
94.	Qu’est-ce que l’injection SQL ? Comment s’en prémunir ? ->  La faille SQL est le fait d'utiliser du code SQL afin d'accéder à la base de donnée ou d'en modifier le contenu. Pour s'en rpémunir il faut préparer chaque requêtes
95.	Qu’est-ce que la faille XSS ? Comment s’en prémunir ? -> La faille XSS c'est le fait d'injecter du code malveillant dans une page web. Pour s'en prémunir, on filtre chaque champs des formulaires présents sur la page.
96.	Qu’est-ce que la faille CSRF ? Comment s’en prémunir ?
97.	Définir l’attaque par force brute et l’attaque par dictionnaire
98.	Existe-t-il d’autres failles de sécurité ? Citer celles-ci et expliquer simplement leur comportement
99.	A quoi servent l’authentification et l’autorisation dans un contexte d’application web ?
100.	Définir la notion de hachage d’un mot de passe et citer des algorithmes de hachage -> le hachage permet de modifier un mot de passe en le remplaçant par plsuieurs lettres et chiffres dans la base de données afin que personne n'accède au mot de passe d'origine.
Algo de hachage -> Bcrypt, MD5, SHA256
101.	Qu’est-ce qu’une politique de mots de passe forts ? 
102.	Qu’est-ce que l’hameçonnage ?
103.	Définir la « validation des entrées »

## RGPD
104.	Qu’est-ce que le RGPD ? Le RGPD est un réglement qui encadre le traitement des données personnelles dans l'union européenne.
105.	Quel est son objectif principal ?
106.	Quelle est la date d’entrée en vigueur du RGPD ? 25 mai 2018
107.	Quelles sont les sanctions possibles en cas de non-respect du RGPD ? Des sanctions comme des amendes pouvant aller jusqu'a 20 millions d'euros ou 4% du chiffre d'affaire annuel de l'entreprise concernée.
108.	En France, quel est l’autorité administrative qui s’occupe de faire appliquer le RGPD ?
109.	Quel est le consentement valide selon le RPGD ?
110.	Qu’est-ce qu’une politique de confidentialité ?
111.	Quelle est la durée de conservation maximale des données personnelles selon le RGPD ? 3 ans.
112.	Quels sont les droits des utilisateurs selon le RGPD ?
113.	Qu’est-ce que le principe de minimisation des données selon le RGPD ?

## SEO
114.	Qu’est-ce que le SEO ? -> "Optimisation pour les moteurs de recherches".Ce sont tous les codes à respecter afin de bien être référencé sur les pages des differents moteurs de recherches
115.	Quel est l’objectif principal du SEO ? 
116.	Existe-t-il plusieurs types de référencement ? Lesquels ?
117.	Qu’est-ce que la densité de mots-clés en SEO ?
118.	Qu’est-ce qu’une balise « alt » ? La balise alt permet un bon réferencement car c'est grâce à elle qu'on peut préciser ce qu'une image affiche. Elle permet également de décrire l'image si il y a un bug lors de l'affichage ou, d'expliquer ce qu'il s'y trouve pour les personnes mal-voyantes.
119.	Qu’est-ce que la balise « meta description » ?
120.	Qu’est-ce que le « nofollow » en SEO ?
121.	Quelle est l'importance du contenu de qualité pour le référencement d'un site web ?
122.	Pourquoi est-il important d'utiliser des balises de titre (h1, h2, h3, etc.) de manière structurée ?
123.	Quelle est la recommandation pour les URL d'un site web bien référencé ?
124.	Qu'est-ce que le maillage interne et pourquoi est-il important pour le référencement ?
125.	Qu'est-ce que l'optimisation des images pour le référencement ?
126.	Qu'est-ce qu'un plan de site (sitemap) et pourquoi est-il important pour le référencement ?

## Gestion de projets - DevOps
127.	Qu’est-ce que la gestion de projet ?	
128.	Qu’est-ce qu’une méthode Agile de gestion de projet ? 
129.	Expliquer la méthode MoSCoW en quelques lignes et citer ses avantages -> la méthode moscow permet de hiérarchiser les tâches.
130.	A quoi sert la méthodologie MVP ? Citer les caractéristiques clés
131.	Qu’est-ce que la planification itérative ?
132.	Citer 3 méthodes Agiles dans le cadre d’un projet informatique
133.	Qu’est-ce qu’une réunion de revue de projet ?
134.	Qu’est-ce qu’un livrable dans un projet ? 
135.	Quels sont les 3 piliers SCRUM ? Définir chacun d’entre eux
136.	Qu’est-ce que le DevOps et quel est son objectif principal ?
137.	Qu’est-ce que l’intégration continue ? 
138.	Qu’est-ce que Docker ? Et en quoi est-il utile dans le cadre du DevOps ?
139.	Qu’est-ce qu’un test unitaire ? 
140.	Quelle est l'unité de code testée lors d'un test unitaire ?
141.	Quelles sont les caractéristiques d'un bon test unitaire ?
142.	Qu'est-ce qu'une assertion dans un test unitaire ?
 
## English
1)	What does JavaScript enable you to do on a website ?
a.	Add interactive behavior and dynamic content X
b.	Define the layout and design of web pages
c.	Handle server-side operations
2)	Which programming language is primarily used for server-side web development ?
a.	PHP X
b.	JavaScript
c.	HTML
3)	What is the purpose of a web browser ?
a.	To render and display web pages X
b.	To execute serve-side code
c.	To manage databases
4)	What is the difference between GET and POST methods in HTTP ?
a.	GET retrieves data from a server, while POST submits data to a server X
b.	GET submits data to a server, while POST retrieves data from a server
c.	GET and POST methods are interchangeable
5)	What is the purpose of version control systems (e.g., Git) in web development ?
a.	To track changes and manage collaborative development X
b.	To optimize website loading speed
c.	To handle server-side scripting
6)	What is the purpose of a framework in web development ?
a.	To provide a structured environment for building web applications X
b.	To handle network protocols and data transfer
c.	To create visual designs and layouts for websites
7)	What does NoSQL stand for ?
a.	Not Only SQL X
b.	Non-Structured Query Language
c.	New Object-Oriented Language
8)	Which of the following is a characteristic of NoSQL databases ?
a.	Strict schema enforcement
b.	Support for complex transactions
c.	Scalability and flexible data models
